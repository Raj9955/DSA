LeetCode 234
Given the head of a singly linked list, return true if it is a
palindrome
 or false otherwise.

 Example 1:
 Input: head = [1,2,2,1]
 Output: true

 Example 2:
 Input: head = [1,2]
 Output: false

 solN:

 /**
  * Definition for singly-linked list.
  * public class ListNode {
  *     int val;
  *     ListNode next;
  *     ListNode() {}
  *     ListNode(int val) { this.val = val; }
  *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
  * }
  */
 class Solution {
     public boolean isPalindrome(ListNode head) {
         ListNode slow=head;
         ListNode fast=head;

         while(fast.next!=null && fast.next.next!=null)
         {
             slow=slow.next;
             fast=fast.next.next;
         }

         ListNode newHead = reverse(slow.next);

         ListNode first=head;
         ListNode second=newHead;

         while(second!=null)
         {
             if(first.val != second.val)
             {
                 reverse(newHead);
                 return false;
             }
             first=first.next;
             second=second.next;
         }

         reverse(newHead);

         return true;

     }

     public ListNode reverse(ListNode head)
     {
         ListNode prev=null;
         ListNode curr=head;
         ListNode nex=null;

         while(curr!=null)
         {
             nex=curr.next;
             curr.next=prev;
             prev=curr;
             curr=nex;
         }

         return prev;
     }
 }